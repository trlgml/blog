(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{427:function(s,e,a){"use strict";a.r(e);var t=a(28),n=Object(t.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("ul",[a("li",[s._v("安装")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("npm install pm2 -g\n")])])]),a("ul",[a("li",[s._v("查看版本")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("pm2 -v\n")])])]),a("ul",[a("li",[s._v("更新")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("pm2 update\n")])])]),a("ul",[a("li",[s._v("启动")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('pm2 start app.js -i max\n\nor\n\n新建文件 process.json\n{\n  "apps" : [{\n    "name:: \'app-name\'\n    "script"    : "api.js",\n    "instances" : max,\n    "exec_mode" : "cluster"\n  }]\n}\n\npm2 start processes.json\n')])])]),a("ul",[a("li",[s._v("重启")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("pm2 reload <app_name>\n\nor\n\npm2 reload process.json\n")])])]),a("ul",[a("li",[s._v("命令")])]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# Fork mode\n$ pm2 start app.js --name my-api # Name process\n\n# Cluster mode\n$ pm2 start app.js -i 0        # Will start maximum processes with LB depending on available CPUs\n$ pm2 start app.js -i max      # Same as above, but deprecated.\n\n# Listing\n\n$ pm2 list               # Display all processes status\n$ pm2 jlist              # Print process list in raw JSON\n$ pm2 prettylist         # Print process list in beautified JSON\n\n$ pm2 describe 0         # Display all informations about a specific process\n\n$ pm2 monit              # Monitor all processes\n\n# Logs\n\n$ pm2 logs [--raw]       # Display all processes logs in streaming\n$ pm2 flush              # Empty all log file\n$ pm2 reloadLogs         # Reload all logs\n\n# Actions\n\n$ pm2 stop all           # Stop all processes\n$ pm2 restart all        # Restart all processes\n\n$ pm2 reload all         # Will 0s downtime reload (for NETWORKED apps)\n$ pm2 gracefulReload all # Send exit message then reload (for networked apps)\n\n$ pm2 stop 0             # Stop specific process id\n$ pm2 restart 0          # Restart specific process id\n\n$ pm2 delete 0           # Will remove process from pm2 list\n$ pm2 delete all         # Will remove all processes from pm2 list\n\n# Misc\n\n$ pm2 reset <process>    # Reset meta data (restarted time...)\n$ pm2 updatePM2          # Update in memory pm2\n$ pm2 ping               # Ensure pm2 daemon has been launched\n$ pm2 sendSignal SIGUSR2 my-app # Send system signal to script\n$ pm2 start app.js --no-daemon\n$ pm2 start app.js --no-vizion\n$ pm2 start app.js --no-autorestart\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);