(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{414:function(t,e,s){"use strict";s.r(e);var a=s(27),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"iterm-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#iterm-2"}},[t._v("#")]),t._v(" iTerm 2")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://www.iterm2.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("下载 iTerm 2"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"oh-my-zsh"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#oh-my-zsh"}},[t._v("#")]),t._v(" oh-my-zsh")]),t._v(" "),s("ul",[s("li",[t._v("安装oh-my-zsh "),s("code",[t._v("curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh")])])]),t._v(" "),s("h2",{attrs:{id:"powerline"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#powerline"}},[t._v("#")]),t._v(" Powerline")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("如果你的终端能够正常执行pip指令，那么直接执行下面的指令可以完成安装\n\npip install powerline-status\n\n如果没有，则先执行安装pip指令\n\nsudo easy_install pip\n")])])]),s("h2",{attrs:{id:"下载、安装字体库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#下载、安装字体库"}},[t._v("#")]),t._v(" 下载、安装"),s("a",{attrs:{href:"https://github.com/powerline/fonts",target:"_blank",rel:"noopener noreferrer"}},[t._v("字体库"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1）将工程下载下来后cd到install.sh文件所在目录\n\n2）执行指令安装字体库\n\n执行./install.sh指令安装所有Powerline字体\n\n安装完成后提示所有字体均已下载到/Users/superdanny/Library/Fonts路径下\n\n安装完字体库之后，把iTerm 2的设置里的Profile中的Text 选项卡中里的Regular Font和Non-ASCII Font的字体都设置成 Powerline的字体，我这里设置的字体是14pt Meslo LG S DZ Regular for Powerline\n")])])]),s("h2",{attrs:{id:"下载、安装配色方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#下载、安装配色方案"}},[t._v("#")]),t._v(" 下载、安装"),s("a",{attrs:{href:"https://github.com/altercation/solarized",target:"_blank",rel:"noopener noreferrer"}},[t._v("配色方案"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1.进入刚刚下载的工程的solarized/iterm2-colors-solarized 下双击 Solarized Dark.itermcolors 和 Solarized Light.itermcolors 两个文件就可以把配置文件导入到 iTerm2 里\n2.通过load presets选择刚刚安装的配色主题即可\n")])])]),s("h2",{attrs:{id:"使用agnoster主题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用agnoster主题"}},[t._v("#")]),t._v(" 使用"),s("a",{attrs:{href:"https://note.youdao.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("agnoster"),s("OutboundLink")],1),t._v("主题")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('1.到下载的工程里面运行install文件,主题将安装到~/.oh-my-zsh/themes目录下\n\n2.进入~/.zshrc打开.zshrc文件，然后将ZSH_THEME后面的字段改为agnoster。ZSH_THEME="agnoster"（agnoster即为要设置的主题）\n。\n')])])]),s("h2",{attrs:{id:"增加指令高亮效果-zsh-syntax-highlighting"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#增加指令高亮效果-zsh-syntax-highlighting"}},[t._v("#")]),t._v(" 增加指令高亮效果——"),s("a",{attrs:{href:"https://github.com/zsh-users/zsh-syntax-highlighting",target:"_blank",rel:"noopener noreferrer"}},[t._v("zsh-syntax-highlighting"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1）cd到.zshrc所在目录\n\n2）执行指令将工程克隆到当前目录\n\ngit clone git://github.com/zsh-users/zsh-syntax-highlighting.git\n\n3）打开.zshrc文件，在最后添加下面内容\n\nsource XXX/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh\n\n保存文件。\n\n注意：xxx代表.zshrc所在目录\n\n4）cd ~/.oh-my-zsh/custom/plugins\n\n5）再次打开.zshrc文件，在最后面添加下面内容\n\nplugins=(zsh-syntax-highlighting)\n\n")])])]),s("h2",{attrs:{id:"别名设置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#别名设置"}},[t._v("#")]),t._v(" 别名设置")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('# vim ~/.zshrc\n\nalias xxx="xxx"\n\n# source ~/.zshrc\n')])])]),s("h2",{attrs:{id:"快捷键"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#快捷键"}},[t._v("#")]),t._v(" 快捷键")]),t._v(" "),s("ul",[s("li",[t._v("唤醒热键 到"),s("code",[t._v("iterm2 -> Preferences -> Keys -> Hotkey")]),t._v("去设置")]),t._v(" "),s("li",[t._v("快速切换到当前正在输入的文本的头部／尾部 "),s("code",[t._v("ctrl + a/e")])]),t._v(" "),s("li",[t._v("清空当前输入 "),s("code",[t._v("ctrl + u")])]),t._v(" "),s("li",[t._v("打开一个新的 iterm2 Tab "),s("code",[t._v("cmd + T")])]),t._v(" "),s("li",[t._v("左右切换 Tab "),s("code",[t._v("cmd + 方向键")])]),t._v(" "),s("li",[t._v("分屏 "),s("code",[t._v("cmd + D")])]),t._v(" "),s("li",[t._v("清屏 "),s("code",[t._v("cmd + K")])]),t._v(" "),s("li",[t._v("打开一个新的 iterm2 窗口 "),s("code",[t._v("cmd + N")])])]),t._v(" "),s("h2",{attrs:{id:"备注"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#备注"}},[t._v("#")]),t._v(" 备注")]),t._v(" "),s("ul",[s("li",[t._v("路径前缀的XX@XX太长，缩短问题：在~/.oh-my-zsh/themes路径下找到agnoster.zsh-theme文件，将里面的build_prompt下的prompt_context字段在前面加#注释掉即可。")]),t._v(" "),s("li",[t._v("启动iTerm 2 默认使用dash改用zsh解决方法："),s("code",[t._v("chsh -s /bin/zsh")])]),t._v(" "),s("li",[t._v("如果想切换回原来的dash："),s("code",[t._v("chsh -s /bin/bash")])]),t._v(" "),s("li",[t._v("卸载oh my zsh，在命令行输入如下命令，回车即可："),s("code",[t._v("uninstall_oh_my_zsh")])]),t._v(" "),s("li",[t._v('⌘+Q关闭iTerm 2 时每次弹窗提示问题：\niTerm 2 中，进入Preference-General-Closing栏目，将Confirm "Quit iTerm2(⌘Q)" command选项勾选去掉就行')])])])}),[],!1,null,null,null);e.default=r.exports}}]);