(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{394:function(i,e,t){"use strict";t.r(e);var r=t(28),n=Object(r.a)({},(function(){var i=this,e=i.$createElement,t=i._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":i.$parent.slotKey}},[t("p",[t("a",{attrs:{href:"https://learngitbranching.js.org/?locale=zh_CN",target:"_blank",rel:"noopener noreferrer"}},[i._v("git学习"),t("OutboundLink")],1)]),i._v(" "),t("ul",[t("li",[t("p",[i._v("git add")])]),i._v(" "),t("li",[t("p",[i._v("git commit")])]),i._v(" "),t("li",[t("p",[i._v("git commit -am")])]),i._v(" "),t("li",[t("p",[i._v("git branch newBranch（新建分支）")])]),i._v(" "),t("li",[t("p",[i._v("git checkout newBranch（切换分支）")])]),i._v(" "),t("li",[t("p",[i._v("git checkout -b newBranch（新建并切换）")])]),i._v(" "),t("li",[t("p",[i._v("git merge newBranch (把newBranch合并到当前分支)")])]),i._v(" "),t("li",[t("p",[i._v("git rebase master newBranch（把newBranch变基到master）")])]),i._v(" "),t("li",[t("p",[i._v("git checkout HEAD^（检出HEAD的父节点）")])]),i._v(" "),t("li",[t("p",[i._v("git checkout HEAD^2（检出HEAD第二个父节点，区别~）")])]),i._v(" "),t("li",[t("p",[i._v("git checkout master^（检出master的父节点）")])]),i._v(" "),t("li",[t("p",[i._v("git checkout master^^（检出master的父父节点）")])]),i._v(" "),t("li",[t("p",[i._v("git checkout HEAD~4（检出HEAD的第4个父节点）")])]),i._v(" "),t("li",[t("p",[i._v("git branch -f master HEAD~3（把master分支强制切换到HEAD的第三个父节点）")])]),i._v(" "),t("li",[t("p",[i._v("git reset HEAD~1（重置到上一次提交）")])]),i._v(" "),t("li",[t("p",[i._v("git revert HEAD（重做本次提交）")])]),i._v(" "),t("li",[t("p",[i._v("git cherry-pick commitId（取commitId提交到当前分支）")])]),i._v(" "),t("li",[t("p",[i._v("git rebase -i HEAD~4（交互式变基HEAD到HEAD前四次提交）")])]),i._v(" "),t("li",[t("p",[i._v("git commit --amend（）")])]),i._v(" "),t("li",[t("p",[i._v("git clone")])]),i._v(" "),t("li",[t("p",[i._v("git checkout origin/master（切换到远端的本地分支）")])]),i._v(" "),t("li",[t("p",[i._v("git fetch（拉取远端分支）")])])]),i._v(" "),t("p",[i._v("配合"),t("code",[i._v("git fetch")])]),i._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[i._v("git cherry-pick origin/master\ngit rebase origin/master\ngit merge origin/master\n")])])]),t("ul",[t("li",[t("p",[i._v("git pull（拉取并merge）")])]),i._v(" "),t("li",[t("p",[i._v("git pull --rebase （拉取并rebase）")])]),i._v(" "),t("li",[t("p",[i._v("git push（推送本地）")])]),i._v(" "),t("li",[t("p",[i._v("git checkout -b newBranch origin/master(远端新建本地分支)")])]),i._v(" "),t("li",[t("p",[i._v("git branch newBranch")])]),i._v(" "),t("li",[t("p",[i._v("git branch -u origin/master newBranch（关联本地和远程分支）")])]),i._v(" "),t("li",[t("p",[i._v("git push "),t("code",[i._v("<remote> <place>")])])]),i._v(" "),t("li",[t("p",[i._v("git push origin master（本地mastr到origin的master分支）")])]),i._v(" "),t("li",[t("p",[i._v("git push origin "),t("code",[i._v("<source>:<destination>")])])]),i._v(" "),t("li",[t("p",[i._v("git push origin newBranch:master(提交本地的newBranch分支代码到origin的master分支，远程分支不存在会被创建)")])]),i._v(" "),t("li",[t("p",[i._v("git fetch origin "),t("code",[i._v("<source>:<destination>")])])]),i._v(" "),t("li",[t("p",[i._v("git fetch origin newBranch\n(从远端newBranch分支拉取代码，放到本地的origin/newBranch分支)")])]),i._v(" "),t("li",[t("p",[i._v("git fetch origin newBranch/master\n(从远端newBranch分支拉取代码，放到本地的master分支上)")])]),i._v(" "),t("li",[t("p",[i._v("git push origin :newBranch(删除远程newBranch仓库)")])]),i._v(" "),t("li",[t("p",[i._v("git fetch origin :newBranch(本地新建一个空newBranch仓库)")])]),i._v(" "),t("li",[t("p",[i._v("git pull origin master:newBranch(本地新建一个newBranch分支，从master拉取代码，合并到newBranch，最后merge到当前分支)")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);